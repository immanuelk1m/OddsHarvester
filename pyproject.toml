[project]
name = "OddsHarvester"
version = "0.1.0"
description = "A Python application to scrape and manage odds data from OddsPortal website."
authors = [{ name = "Jordan TETE", email = "tetej171@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE.txt" }
requires-python = ">=3.12"
dependencies = [
    "beautifulsoup4>=4.12.3",
    "boto3>=1.36.0",
    "lxml>=5.3.0",
    "playwright>=1.49.1",
    "pytz>=2024.2"
]

[project.urls]
repository= "https://github.com/jordantete/OddsHarvester"
issues = "https://github.com/jordantete/OddsHarvester/issues"
discussions = "https://github.com/jordantete/OddsHarvester/discussions"

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.ruff]
line-length = 120
target-version = "py312"
src = ["src", "tests"]

[tool.ruff.lint]
# Enable comprehensive rule sets for a production project
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "S",    # flake8-bandit (security)
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
]
ignore = [
    "E501",   # line too long, handled by formatter
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
    "S101",   # assert used (OK in tests)
    "T201",   # print found (OK for CLI tool)
    "S311",   # pseudo-random generators (OK for user agents, not crypto)
    "S603",   # subprocess call with shell=True (needed for some operations)
    "S607",   # starting process with partial executable path
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
# Tests can use more flexible patterns
"tests/**" = ["S101", "S105", "S106", "S108", "PT011", "SIM117"]
# Lambda handler may need different patterns
"src/lambda_handler.py" = ["T201"]
# CLI help messages can use unicode characters
"src/cli/cli_help_message_generator.py" = ["RUF001"]

[dependency-groups]
dev = [
    "playwright>=1.49.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools]
include-package-data = true
